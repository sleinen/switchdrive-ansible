upgrade oc 8.1 to oc 9.0
==========================================
#################
# setup

>>> mac
cd ~/drive
#SITE=sldrive
SITE=drive

git status
 -> should be on branch 9.0

#################
# set security groups to switch only

>> controllerz
#. rc/ls-drive-staging
. rc/zh-drive

LB_SERVER_ID=`nova list | awk '/drive-lb/ {print $2}'`; echo $LB_SERVER_ID
   -> id of lb server: c1994eca-f63d-407d-ab1e-33b7f99b8a53
#SEC_GROUP_WEB=`nova list-secgroup $LB_SERVER_ID | awk '/web/ {print $2}'`; echo $SEC_GROUP_WEB
SEC_GROUP_WEB2=`nova secgroup-list | awk '/web / {print $2}'`; echo $SEC_GROUP_WEB2
	-> 6cb6a5f2-7ecf-462f-8493-cb5a523f6419
# remove sec group "web"
nova remove-secgroup $LB_SERVER_ID $SEC_GROUP_WEB
# add sec group "webint"
SEC_GROUP_WEBINT=`nova secgroup-list | awk '/webint/ {print $2}'`; echo $SEC_GROUP_WEBINT
	-> a3bc3bf1-129a-4bea-adaf-eb915676192e

nova add-secgroup $LB_SERVER_ID $SEC_GROUP_WEBINT
nova list-secgroup $LB_SERVER_ID

#################
# stop service

>>> lb.$SITE

# staging: only web1/2, sync1/2

sudo /root/ha_update di web1
sudo /root/ha_update di web2
sudo /root/ha_update di web3
sudo /root/ha_update di web4
sudo /root/ha_update di sync1
sudo /root/ha_update di sync2
sudo /root/ha_update di sync3
sudo /root/ha_update di sync4
sudo /root/ha_update di sync5
sudo /root/ha_update di sync6
sudo /root/ha_update di sync7
sudo /root/ha_update di sync8
sudo /root/ha_update di sync9
sudo /root/ha_update di sync10
sudo /root/ha_update di sync11
sudo /root/ha_update di sync12
sudo /root/ha_update di sync13
sudo /root/ha_update di sync14
sudo /root/ha_update di sync15
sudo /root/ha_update di sync16
sudo /root/ha_update di sync17
sudo /root/ha_update di sync18
sudo /root/ha_update di sync19
sudo /root/ha_update di sync20

# kill all ongoing sessions
>>> mac
ansible-playbook -i inventories/$SITE jobs/php_fpm_legacy_stop.yml


#################
# Backup

# Snapshots

>>> controllerz (in /home/schnidri)
#. rc/ls-drive-staging
. rc/zh-drive

grep drive /etc/cron.d/SWITCHdrive | sed -e 's&.*\*&sudo -u&'| sort -k 7 > ./snapshotAll
bash ./snapshotAll

# ./snapshotAll should have lines like this:
#      sudo -u peta /home/peta/bin/snapshotSWITCHdrive ZH 82f37a75-6bc2-46a2-ae5e-669541fa112b 000


# check with
openstack snapshot list | grep 'data-.*-'`date "+%Y%m%d"` | sort -k 4

# redo those that failed.

# sync & web

function snapshot() {
  VOL=`/usr/bin/openstack volume list | grep "drive-$1 " | awk '{ print $2 }'`
  /usr/bin/cinder snapshot-create --force True --display-name backup-drive-$1-`/bin/date "+%Y%m%d-%H:%M"` $VOL
}

snapshot sync1_root
snapshot sync2_root
snapshot sync3_root
snapshot sync4_root
snapshot sync5_root
snapshot sync6_root
snapshot sync7_root
snapshot sync8_root
snapshot sync9_root
snapshot sync10_root
snapshot sync11_root
snapshot sync12_root
snapshot sync13_root
snapshot sync14_root
snapshot sync15_root
snapshot sync16_root
snapshot sync17_root
snapshot sync18_root
snapshot sync19_root
snapshot sync20_root
snapshot web1_root
snapshot web2_root
snapshot web3_root
snapshot web4_root

# check with
cinder snapshot-list | grep 'root.*-20160213' | sort -k 8
openstack snapshot list | grep 'root-.*-'`date "+%Y%m%d"` | sort -k 4

# db

>>> db1.$SITE

sudo docker exec mariadb bash -c "xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/backup/preUpgrade --password=\$MYSQL_ROOT_PASSWORD"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/preUpgrade
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/preUpgrade

# OC 8.1 config
>>> mac
ssh web1.$SITE sudo cp /var/www/owncloud/config/config.php /tmp/config.php
ssh web1.$SITE sudo chmod o+r /tmp/config.php
scp web1.$SITE:/var/www/owncloud/config/config.php tmp/config.php-8.1

#################
# convert galera cluster to single db instance

ansible-playbook -i inventories/$SITE jobs/mariadb_convert_galeracluster_to_single_node.yml

#monitor proges on web1 with:
while (true) ; do /root/maxadmin list servers; sleep 1; done

# from now on db server in config.php has to point to the remaining db server: 10.0.Y.3X

#edit roles/ocphp_fpm/templates/owncloud/drive-xxx.switch.ch/config.php.j2
    -> set 'dbhost' => '{{hostvars[groups["mariadb"][0]].inventory_hostname}}'


#################
# OC-8.2

backup old config
rsync --rsync-path="sudo rsync" web1.$SITE:/var/www/owncloud/config/config.php tmp/config.php-8.1


# install code

# only php-fpm container
>>> mac
ansible-playbook -i inventories/$SITE-8.2 playbooks/webservers.yml --limit=*.201 --tags=ocphp_fpm

# run upgrade
>>> web1.$SITE
sudo /root/occ upgrade -vvv --skip-migration-test

# backup OC 8.2 config
>>> mac
rsync --rsync-path="sudo rsync" web1.$SITE:/etc/owncloud/config.php tmp/config.php-8.2

#edit roles/ocphp_fpm/templates/owncloud/drive-xxx.switch.ch/config.php.j2
    -> check/fix version
    add/replace the following
   -----------
  'enabledPreviewProviders' =>
  array (
    0 => 'OC\\Preview\\PNG',
    1 => 'OC\\Preview\\JPEG',
    2 => 'OC\\Preview\\GIF',
    3 => 'OC\\Preview\\XBitmap',
    4 => 'OC\\Preview\\MP3',
    5 => 'OC\\Preview\\TXT',
    6 => 'OC\\Preview\\MarkDown',
  ),
  'trashbin_retention_obligation' => 'auto',
   -----------

#################
# OC-9.0

# install code
>>> mac
# only php-fpm container
ansible-playbook -i inventories/$SITE playbooks/webservers.yml --limit=*.201 --tags=ocphp_fpm

# speed up upgrade (recommended by owncloud)
# on db1:
/root/mariadb
  -> use owncloud;
     ALTER TABLE `oc_filecache` ADD COLUMN checksum varchar(255) DEFAULT NULL AFTER permissions;

# run upgrade
>>>> web1.$SITE
sudo /root/occ upgrade -vvv --skip-migration-test

# backup upgraded database
sudo docker exec mariadb bash -c "xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/backup/postUpgrade --password=\$MYSQL_ROOT_PASSWORD"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/postUpgrade
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/postUpgrade


# backup OC 9.0 config
rsync --rsync-path="sudo rsync" web1.$SITE:/etc/owncloud/config.php tmp/config.php-9.0

#edit roles/owncloud/templates/owncloud/drive-xxx.switch.ch/config.php.j2
    -> check/fix version

ansible-playbook -i inventories/$SITE playbooks/webservers.yml --limit=*201

#################
# check upgrade

>>> web1.$SITE
sudo /root/occ maintenance:singleuser --on
>>> lb.$SITE
sudo /root/ha_update en web1


#### check config on admin page #####
-> check apps -> disable pictures app

>>> web1
/root/occ maintenance:singleuser --off


#################
# convert db into galera cluster

ansible-playbook -i inventories/$SITE jobs/mariadb_bootcluster.yml

#monitor proges on web1 with:
while (true) ; do /root/maxadmin list servers; sleep 1; done

# from now on db server in config.php has to poin to localhost again.

#edit roles/ocphp_fpm/templates/owncloud/drive-xxx.switch.ch/config.php.j2
    -> set 'dbhost' => 'localhost'

#############
# upgrade remaining app servers
ansible-playbook -i inventories/$SITE playbooks/webservers.yml
ansible-playbook -i inventories/$SITE playbooks/syncservers.yml
ansible-playbook -i inventories/$SITE playbooks/mgmtcservers.yml
ansible-playbook -i inventories/$SITE playbooks/devservers.yml

#################
# reenable lb
>>> lb.$SITE

sudo /root/ha_update en web1
sudo /root/ha_update en web2
sudo /root/ha_update en web3
sudo /root/ha_update en web4
sudo /root/ha_update en sync1
sudo /root/ha_update en sync2
sudo /root/ha_update en sync3
sudo /root/ha_update en sync4
sudo /root/ha_update en sync5
sudo /root/ha_update en sync6
sudo /root/ha_update en sync7
sudo /root/ha_update en sync8
sudo /root/ha_update en sync9
sudo /root/ha_update en sync10
sudo /root/ha_update en sync11
sudo /root/ha_update en sync12
sudo /root/ha_update en sync13
sudo /root/ha_update en sync14
sudo /root/ha_update en sync15
sudo /root/ha_update en sync16

#### test web and sync ####

#################
# test SWITCH

#################
# set back security groups to default

>>> controllerz
#. rc/ls-drive-staging
. rc/zh-drive


LB_SERVER_ID=`nova list | awk '/drive-lb/ {print $2}'`; echo $LB_SERVER_ID
   -> id of lb server: c1994eca-f63d-407d-ab1e-33b7f99b8a53
#SEC_GROUP_WEB=`nova list-secgroup $LB_SERVER_ID | awk '/web/ {print $2}'`; echo $SEC_GROUP_WEB
SEC_GROUP_WEB=`nova secgroup-list | awk '/web / {print $2}'`; echo $SEC_GROUP_WEB
	-> 6cb6a5f2-7ecf-462f-8493-cb5a523f6419
SEC_GROUP_WEBINT=`nova secgroup-list | awk '/webint/ {print $2}'`; echo $SEC_GROUP_WEBINT
	-> a3bc3bf1-129a-4bea-adaf-eb915676192e
# remove sec group "webint"
nova remove-secgroup $LB_SERVER_ID $SEC_GROUP_WEBINT

# add sec group "web"
nova add-secgroup $LB_SERVER_ID $SEC_GROUP_WEB
nova list-secgroup $LB_SERVER_ID


***************************************
***************************************
***************************************
***************************************


