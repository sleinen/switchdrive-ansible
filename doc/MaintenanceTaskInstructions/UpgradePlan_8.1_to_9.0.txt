upgrade oc 8.1 to oc 9.0
==========================================
#################
# setup

>>> mac
cd ~/drive2
#SITE=sldrive
SITE=drive

git status
 -> should be on branch master

#################
# set security groups to switch only

>> oscli-drive
#. rc/ls-drive-staging

LB1_SERVER_ID=`openstack server list | awk '/drive-lb1/ {print $2}'`; echo $LB1_SERVER_ID
LB2_SERVER_ID=`openstack server list | awk '/drive-lb2/ {print $2}'`; echo $LB2_SERVER_ID

SEC_GROUP_WEB=`openstack security group list | awk '/web / {print $2}'`; echo $SEC_GROUP_WEB

# remove sec group "web"
openstack server remove security group $LB1_SERVER_ID $SEC_GROUP_WEB
openstack server remove security group $LB2_SERVER_ID $SEC_GROUP_WEB

# add sec group "webint"
SEC_GROUP_WEBINT=`openstack security group list | awk '/webint/ {print $2}'`; echo $SEC_GROUP_WEBINT

openstack server add security group $LB1_SERVER_ID $SEC_GROUP_WEBINT
openstack server add security group $LB2_SERVER_ID $SEC_GROUP_WEBINT
openstack server show $LB1_SERVER_ID -c security_groups
openstack server show $LB2_SERVER_ID -c security_groups

#################
# stop service

>>> lb.$SITE

# staging: only web1/2, sync1/2

sudo /root/ha_update di web1
sudo /root/ha_update di web2
sudo /root/ha_update di web3
sudo /root/ha_update di web4
sudo /root/ha_update di sync1
sudo /root/ha_update di sync2
sudo /root/ha_update di sync3
sudo /root/ha_update di sync4

# kill all ongoing sessions
>>> mac
ansible-playbook -i inventories/$SITE jobs/php_fpm_legacy_stop.yml


#################
# Backup

# Snapshots

>>> controllerz (in /home/schnidri)
#. rc/ls-drive-staging
. rc/zh-drive

grep drive /etc/cron.d/SWITCHdrive | sed -e 's&.*\*&sudo -u&'| sort -k 7 > ./snapshotAll
bash ./snapshotAll

# ./snapshotAll should have lines like this:
#      sudo -u peta /home/peta/bin/snapshotSWITCHdrive ZH 82f37a75-6bc2-46a2-ae5e-669541fa112b 000


# check with
openstack snapshot list | grep 'data-.*-'`date "+%Y%m%d"` | sort -k 4

# redo those that failed.

# sync & web

function snapshot() {
  VOL=`/usr/bin/openstack volume list | grep "drive-$1 " | awk '{ print $2 }'`
  /usr/bin/cinder snapshot-create --force True --display-name backup-drive-$1-`/bin/date "+%Y%m%d-%H:%M"` $VOL
}

snapshot sync1_root
snapshot sync2_root
snapshot sync3_root
snapshot sync4_root
snapshot web1_root
snapshot web2_root
snapshot web3_root
snapshot web4_root

# check with
openstack volume snapshot list | grep 'root-.*-'`date "+%Y%m%d"` | sort -k 4

# db

>>> db1.$SITE

sudo docker exec mariadb bash -c "xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/backup/preUpgrade --password=\$MYSQL_ROOT_PASSWORD"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/preUpgrade"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/preUpgrade"

#################
# convert galera cluster to single db instance

ansible-playbook -i inventories/$SITE jobs/mariadb_convert_galeracluster_to_single_node.yml

#monitor progress on web1 with:
while (true) ; do /root/maxadmin list servers; sleep 1; done

# from now on db server in config.php has to point to the remaining db server: 10.0.Y.3X

#edit roles/ocphp_fpm/templates/owncloud/drive-xxx.switch.ch/config.php.j2
    -> set 'dbhost' => '{{hostvars[groups["mariadb"][0]].inventory_hostname}}'


#################
# OC-8.2

backup old config
rsync --rsync-path="sudo rsync" web1.$SITE:/var/www/owncloud/config/config.php tmp/config.php-8.1


# install code

# only php-fpm container on web10
edit group_vars/all/shards file and set drive to 8.2 release.

>>> mac
ansible-playbook -i inventories/$SITE playbooks/webservers.yml --limit=*.210 --tags=ocphp_fpm

# run upgrade
>>> web10.$SITE
tmux
time /root/occ a01 upgrade -vvv --skip-migration-test
# takes about 90 Minutes

# db backup on db1
sudo docker exec mariadb bash -c "xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/backup/oc8.2 --password=\$MYSQL_ROOT_PASSWORD"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/oc8.2"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/oc8.2"


# backup OC 8.2 config
>>> mac
rsync --rsync-path="sudo rsync" web10.$SITE:/var/webroot/a01/config/config.php tmp/config.php-8.2

#edit group_vars/all/shards
  -> check/fix version

#################
# OC-9.0

# install code
>>> mac
# only php-fpm container on web11
edit group_vars/all/shards file and set drive to 9.0 release.
ansible-playbook -i inventories/$SITE playbooks/webservers.yml --limit=*.211 --tags=ocphp_fpm

# speed up upgrade (recommended by owncloud)
# on db1:
/root/mariadb
  -> use owncloud;
     ALTER TABLE `oc_filecache` ADD COLUMN checksum varchar(255) DEFAULT NULL AFTER permissions;
# this takes about 60 Minutes
# make sure to have enough space in /tmp


# run upgrade
>>>> web11.$SITE
time /root/occ a01 upgrade -vvv --skip-migration-test
# this takes about 40 Minutes

# backup upgraded database
sudo docker exec mariadb bash -c "xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/backup/postUpgrade --password=\$MYSQL_ROOT_PASSWORD"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/postUpgrade"
sudo docker exec mariadb bash -c "xtrabackup --prepare --target-dir=/backup/postUpgrade"
-> about 25 minutes


# backup OC 9.0 config
rsync --rsync-path="sudo rsync" web11.$SITE:/var/webroot/a01/config/config.php tmp/config.php-9.0

#edit group_vars/all/shards
  -> check/fix version

ansible-playbook -i inventories/$SITE playbooks/webservers.yml --limit=*211

#################
# check upgrade

>>> web11.$SITE
sudo /root/occ maintenance:singleuser --on
>>> lb.$SITE
sudo /root/ha_update en web11


#### check config on admin page #####
-> check apps -> disable pictures app

>>> web11
/root/occ maintenance:singleuser --off


#################
# convert db into galera cluster

ansible-playbook -i inventories/$SITE jobs/mariadb_bootcluster.yml

#monitor progress on web1 with:
while (true) ; do /root/maxadmin list servers; sleep 1; done

# from now on db server in config.php has to point to localhost again.

#edit roles/ocphp_fpm/templates/owncloud/drive-xxx.switch.ch/config.php.j2
    -> set 'dbhost' => 'localhost'

#############
# upgrade remaining app servers
ansible-playbook -i inventories/$SITE playbooks/webservers.yml
ansible-playbook -i inventories/$SITE playbooks/syncservers.yml
ansible-playbook -i inventories/$SITE playbooks/mgmtcservers.yml
ansible-playbook -i inventories/$SITE playbooks/devservers.yml

#################
# reenable lb
>>> lb.$SITE

sudo /root/ha_update en web11
sudo /root/ha_update en web12
sudo /root/ha_update en web13
sudo /root/ha_update en web14
sudo /root/ha_update en sync11
sudo /root/ha_update en sync12
sudo /root/ha_update en sync13
sudo /root/ha_update en sync14

#### test web and sync ####

#################
# test SWITCH

#################
# set back security groups to default

>>> oscli-drive
#. rc/ls-drive-staging

LB1_SERVER_ID=`openstack server list | awk '/drive-lb1/ {print $2}'`; echo $LB1_SERVER_ID
LB2_SERVER_ID=`openstack server list | awk '/drive-lb2/ {print $2}'`; echo $LB2_SERVER_ID

SEC_GROUP_WEB=`openstack security group list | awk '/web / {print $2}'`; echo $SEC_GROUP_WEB
SEC_GROUP_WEBINT=`openstack security group list | awk '/webint/ {print $2}'`; echo $SEC_GROUP_WEBINT

# remove sec group "webint"
openstack server remove security group $LB1_SERVER_ID $SEC_GROUP_WEBINT
openstack server remove security group $LB2_SERVER_ID $SEC_GROUP_WEBINT

# add sec group "web"
openstack server add security group $LB1_SERVER_ID $SEC_GROUP_WEB
openstack server add security group $LB2_SERVER_ID $SEC_GROUP_WEB
openstack server show $LB1_SERVER_ID -c security_groups
openstack server show $LB2_SERVER_ID -c security_groups


***************************************

!!!!!!! check and fix cronjobs

***************************************
***************************************
***************************************


for the upgrade test with read only file-system on web10:
  edit file lib/private/util.php line 702
  umount /mnt/*; for disk in `ls /mnt`; do mount -o ro /mnt/$disk; done
