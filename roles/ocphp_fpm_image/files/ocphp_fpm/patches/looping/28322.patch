From 08cdba79d98af2c0ddce81135e9d73c63be537bb Mon Sep 17 00:00:00 2001
From: Tom Needham <needham.thomas@gmail.com>
Date: Thu, 6 Jul 2017 10:22:39 +0100
Subject: [PATCH 1/2] Block corrupted filecache updates

---
 lib/private/files/cache/cache.php | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/lib/private/files/cache/cache.php b/lib/private/files/cache/cache.php
index c16393cf42e..8e3e53e5a4b 100644
--- a/lib/private/files/cache/cache.php
+++ b/lib/private/files/cache/cache.php
@@ -231,6 +231,7 @@ public function put($file, array $data) {
 	 * @throws \RuntimeException
 	 */
 	public function insert($file, array $data) {
+
 		// normalize file
 		$file = $this->normalize($file);
 
@@ -284,6 +285,13 @@ public function insert($file, array $data) {
 	 */
 	public function update($id, array $data) {
 
+		if(isset($data['parent']) && $data['parent'] === $id) {
+			// Catch the case when we are trying to update the parent to be itself
+			$trace = json_encode(debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS, 50));
+			\OC::$server->getLogger()->error("Trying to set parent of file: $id to itself! Trace: $trace");
+			throw new \InvalidArgumentException('Parent cannot be same as self during filecache update');
+		}
+
 		if (isset($data['path'])) {
 			// normalize path
 			$data['path'] = $this->normalize($data['path']);

From 9948d4863df6becf8c8b9703b497a863a953640e Mon Sep 17 00:00:00 2001
From: Vincent Petry <pvince81@owncloud.com>
Date: Tue, 25 Jul 2017 15:27:16 +0200
Subject: [PATCH 2/2] Log filecache changes

Also patches the cache updater to prevent changing the mime type for
trashed items which would likely cause false positives to be logged
---
 lib/private/files/cache/cache.php   |  6 ++++++
 lib/private/files/cache/updater.php | 13 +++++++++----
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/lib/private/files/cache/cache.php b/lib/private/files/cache/cache.php
index 8e3e53e5a4b..950de0806ed 100644
--- a/lib/private/files/cache/cache.php
+++ b/lib/private/files/cache/cache.php
@@ -302,6 +302,12 @@ public function update($id, array $data) {
 			$data['name'] = $this->normalize($data['name']);
 		}
 
+		if (isset($data['mimetype']) && $data['mimetype'] !== 'httpd/unix-directory') {
+			$trace = json_encode(debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS, 50));
+			$mime = $data['mimetype'];
+			\OC::$server->getLogger()->warning("Setting mime type of file $id to \"$mime\" Trace: $trace");
+		}
+
 		list($queryParts, $params) = $this->buildParts($data);
 		// duplicate $params because we need the parts twice in the SQL statement
 		// once for the SET part, once in the WHERE clause
diff --git a/lib/private/files/cache/updater.php b/lib/private/files/cache/updater.php
index 9e4214ad72a..07292db4562 100644
--- a/lib/private/files/cache/updater.php
+++ b/lib/private/files/cache/updater.php
@@ -188,10 +188,15 @@ public function renameFromStorage(IStorage $sourceStorage, $source, $target) {
 		}
 
 		if (pathinfo($source, PATHINFO_EXTENSION) !== pathinfo($target, PATHINFO_EXTENSION)) {
-			// handle mime type change
-			$mimeType = $this->storage->getMimeType($target);
-			$fileId = $this->cache->getId($target);
-			$this->cache->update($fileId, ['mimetype' => $mimeType]);
+			$isTrash = (($sourceStorage->instanceOfStorage('\OCP\Files\IHomeStorage') && explode('/', $source)[0] === 'files_trashbin')
+				|| ($this->storage->instanceOfStorage('\OCP\Files\IHomeStorage') && explode('/', $target)[0] === 'files_trashbin'));
+
+			if (!$isTrash) {
+				// handle mime type change
+				$mimeType = $this->storage->getMimeType($target);
+				$fileId = $this->cache->getId($target);
+				$this->cache->update($fileId, ['mimetype' => $mimeType]);
+			}
 		}
 
 		if ($sourceCache instanceof Cache) {
