#!/bin/bash

NUM_USERS_TO_MOVE=40
TARGET_DISKS_FILE="/root/targetDisks"
MIN_DISK_FREE_TARGET_DISK="500000000"

while [ ! -e /root/stopMoveUsers ]; do

echo "***********************************************************"
echo "***********************************************************"
echo "***********************************************************"
echo "***********************************************************"
echo "***********************************************************"
date

# kick out disks that are full
for disk in `cat /root/targetDisks`; do
  available=`df /mnt/$disk| grep /mnt/$disk| awk '{ print $4; }'`
  if [ $available -lt ${MIN_DISK_FREE_TARGET_DISK} ]; then
    echo "Purging full target disk from list: $disk"
    /usr/bin/logger moveUserDirs: $disk is full, removing it from possible targets
    grep -v $disk "${TARGET_DISKS_FILE}" > "${TARGET_DISKS_FILE}.new" ; mv "${TARGET_DISKS_FILE}.new" "${TARGET_DISKS_FILE}"
  fi
done

TARGET_DISKS=`cat /root/targetDisks`

DISK=""

# check /mnt/data first
if [ ! -d "/mnt/data/_moved" ]; then
  data_disk=`df /mnt/data | egrep "(3|4|5|6|7|8|9).%" | wc -w`
  if [ "$data_disk" -ne 0 ]; then
    echo "/mnt/data is getting full"
    DISK="data"
  fi
fi


# find disk with usage >= 90% and no _moved directory in it.
n=1
while [ $n -ne 0 ] && [ "$DISK" == '' ]; do
  df /mnt/1?? | sort -nk 4 | grep 9.% | head -n $n | tail -n 1
  DISK=`df /mnt/1?? | sort -nk 4 | grep 9.% | sed -e 's&.* /mnt/&&' | head -n $n | tail -n 1`
  if [ -d "/mnt/$DISK/_moved" ]; then
    DISK=''
    if [ $n -gt 5 ]; then
      n=0
    else
      n=$((n+1))
    fi
  else
    n=0
  fi
done


if [ $(echo $DISK | wc -w) -gt 0 ]; then
  echo "Moving users away from disk $DISK; searching for target disk ..."

  rm -rf /root/userlists
  full_disks=`/root/createUserLists "/mnt/$DISK" "$TARGET_DISKS" $NUM_USERS_TO_MOVE | grep ": 0 capacity left" | sed -e 's&/mnt/&&' -e 's&:.*&&'`
  for disk in $full_disks; do
    echo "Purging full target disk from list: $disk"
    /usr/bin/logger moveUserDirs: $disk is full, removing it from possible targets
    grep -v $disk "${TARGET_DISKS_FILE}" > "${TARGET_DISKS_FILE}.new" ; mv "${TARGET_DISKS_FILE}.new" "${TARGET_DISKS_FILE}"
  done
  SELECTED_TARGET=`wc -l /root/userlists/* | egrep -v '^ +0 ' | egrep -v 'userlists/all|total|rest' | head -n 1 | sed -e 's&.*userlists/&&'`

  if [ $(echo $SELECTED_TARGET | wc -w) -eq 0 ]; then
    echo "No more target disks available."
  else
    echo "Moving users from disk $DISK to $SELECTED_TARGET"
    echo "***********************************************************"
    echo "running tar (`date`)"
    /usr/bin/logger moveUserDirs: /root/tarAndMoveUsers "/mnt/$DISK" $SELECTED_TARGET
    /root/tarAndMoveUsers "/mnt/$DISK" $SELECTED_TARGET
    echo "***********************************************************"
    echo "running rsync (`date`)"
    /usr/bin/logger moveUserDirs: /root/rsyncAndMoveUsers "/mnt/$DISK" "/mnt/$SELECTED_TARGET"
    /root/rsyncAndMoveUsers "/mnt/$DISK" "/mnt/$SELECTED_TARGET"
    echo "***********************************************************"
    echo "moving links (`date`)"
    /usr/bin/logger moveUserDirs: /root/mvLinks "/mnt/$DISK"
    /root/mvLinks "/mnt/$DISK"

    touch /mnt/$DISK/_moved/done
  fi
fi

sleep 3600

done


#
