---

# Install the LDAP Server
#
# based on https://github.com/jgrowl/ansible-playbook-ldap
#

- name: ldap | Make an ansible directory for remembering what we previously run
  file: path={{ldap_done_dir}} state=directory owner=root group=root
  tags:
    - ldap
    - ldap_no_schema
    - auth

- name: ldap | Configure slapd
  debconf: name=slapd question="{{item.question}}" value="{{item.value}}" vtype={{item.vtype}}
  with_items:
      - { question: slapd/internal/generated_adminpw, value: password, vtype: password}
      - { question: slapd/password2, value:  "{{ldap_password}}", vtype: password}
      - { question: slapd/password1, value: "{{ldap_password}}", vtype: password}
      - { question: slapd/allow_ldap_v2, value: false, vtype: boolean}
      - { question: shared/organization, value: "{{ldap_domain}}", vtype: string}
      - { question: slapd/no_configuration, value: false, vtype: boolean}
      - { question: slapd/move_old_database, value: true, vtype: boolean}
      - { question: slapd/dump_database_destdir, value: "/var/backups/slapd-VERSION", vtype: string}
      - { question: slapd/purge_database, value: false, vtype: boolean}
      - { question: slapd/domain, value: "{{ldap_domain}}", vtype: string}
      - { question: slapd/backend, value: HDB, vtype: select}
      - { question: slapd/dump_database, value: "when needed", vtype: select}
  tags:
    - ldap_no_schema
    - ldap

- name: ldap | install ldap packages
  apt: pkg="{{item}}" state=installed
    update_cache={{apt_config.update_cache}} cache_valid_time={{apt_config.cache_valid_time}}
  with_items:
    - slapd
    - ldap-utils
    #- ldapscripts
  tags:
    - ldap_no_schema
    - ldap
    - auth


- include: load-schema.yml

# - name: ldap | ensure ldapscripts.conf exists
#   template: src=root/etc/ldapscripts/ldapscripts.conf.j2 dest=/etc/ldapscripts/ldapscripts.conf owner=root group=root
#   tags:
#     - ldap
#     - auth
#
# - name: ldap | Install add user template
#   template: src=root/etc/ldapscripts/ldapadduser.template.j2 dest=/etc/ldapscripts/ldapadduser.template owner=root group=root
#   tags:
#     - ldap
#     - auth
#
# - name: ldap | ensure ldap.secret exists
#   template: src=root/etc/ldap.secret.j2 dest=/etc/ldap.secret owner=root group=root mode=0400
#   tags:
#     - ldap
#     - auth

# This is really goofy but editing the secrets file in vims leaves an extra space at the end. Not sure what all editors do this
# If your editor does not do this then this command will mess up your file.
# - name: ldap | ensure ldap.secret has no trailing space
#  command: truncate --size {{ ldap_password_size }}  /etc/ldap.secret

# SSL
- name: create SSL directory
  file: dest=/etc/ldap/ssl state=directory owner=openldap group=openldap

- name: drop PEM file
  copy: content="{{slapd_cert[service_name]}}" dest=/etc/ldap/ssl/slapd.pem owner=openldap group=openldap mode=400
  ignore_errors: yes

- name: drop key file
  copy: content="{{slapd_key[service_name]}}" dest=/etc/ldap/ssl/slapd.key owner=openldap group=openldap mode=400
  ignore_errors: yes

- name: drop default/slapd file
  copy: src=etc/default/slapd dest=/etc/default/slapd owner=openldap group=openldap mode=644

#- name: remove ldap:// from config file
#  lineinfile:
#    dest=/etc/default/slapd
#    regexp='^SLAPD_SERVICES'
#    line='SLAPD_SERVICES="ldap:/// ldapi:///"'
#  when: ldap_include_ldap_ssl

- name: restart slapd
  service: name=slapd state=restarted

- name: create backup directory
  file: dest=/var/backup/slapd state=directory owner=root

- name: drop private key for gemino
  copy: content="{{ssh_private_key_gemino_root}}" dest=/root/.ssh/id_rsa owner=root group=root mode=600
  tags:
    - gemino

- name: setup cronjob to backup ldap database
  cron: name="backup_ldap" user=root minute="45" hour="22" job='/usr/sbin/slapcat -H ldaps:/// -b "{{ ldap_dc }}" > /var/backup/slapd/{{ ldap_domain }}-`date +\%d\%m\%y`.ldif'

- name: setup cronjob to backup ldap database to gemino
  cron: name="gemino_ldap" user=root minute="15" hour="23" job='scp /var/backup/slapd/{{ ldap_domain }}-`date +\%d\%m\%y`.ldif wirt@gemino.switch.ch:/bak/{{ service_name }}/ldap'
  when: not stage_or_test_system

- include: ldap_collectd_setup.yml
- include: s3_backup.yml
