---
- name: Kibana archive available
  get_url:
    dest=/opt
    url=https://download.elastic.co/kibana/kibana/kibana-{{ elk_kibana.version }}.tar.gz
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }}
  register: new_archive_downloaded

- name: Kibana archive uncompressed
  unarchive:
    src=/opt/kibana-{{ elk_kibana.version }}.tar.gz
    dest=/opt copy=no
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }}
  when: new_archive_downloaded|changed

- name: Uncompressed Kibana linked to path
  file:
    src=/opt/kibana-{{ elk_kibana.version }}
    path={{ elk_kibana.path }} state=link
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }}
  become: yes

- name: Kibana files ownership
  file:
    path=/opt/kibana-{{ elk_kibana.version }}
    state=directory
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }} recurse=yes
  changed_when: False

- name: Supervisor config file
  template:
    src=kibana/kibana-supervisor.j2
    dest=/etc/supervisor/conf.d/kibana.conf
    owner=root group=root mode=644
  notify: Restart supervisor
  tags:
    - config

- name: Generate kibana htpassword
  shell:
    echo "{{ elk_kibana.user }}:$(openssl passwd -crypt {{ elk_kibana.password }}):kibana" |tee .kibana.htpasswd
  args:
    chdir: /etc/nginx/conf.d
    creates: /etc/nginx/conf.d/.kibana.htpasswd
  register: http_pass_gen
  when: elk_kibana.user is defined and elk_kibana.password is defined
  tags:
    - config

- name: Kibana htpassword file permissions
  file:
    path=/etc/nginx/conf.d/.kibana.htpasswd
    owner={{ elk_nginx.user }} group=root mode=400
  when: http_pass_gen|changed
  tags:
    - config

- name: Nginx config file
  template:
    src=kibana/kibana-default.j2
    dest=/etc/nginx/conf.d/kibana.conf
    owner=root group=root mode=644
  notify: Restart nginx
  tags:
    - config
